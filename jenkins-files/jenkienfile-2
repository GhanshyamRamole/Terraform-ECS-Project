pipeline {
  agent any

  parameters {
    choice(name: 'ENV', choices: ['dev', 'prod'], description: 'Choose Environment to run Terraform against')
    choice(name: 'ACTION', choices: ['plan', 'apply', 'destroy'], description: 'Terraform Action to perform')
  }

  environment {
    TF_VAR_env = "${params.ENV}"
  }

  stages {
    stage('Terraform Init') {
      steps {
        dir("envs/${params.ENV}") {
          sh 'terraform init'
        }
      }
    }

    stage('Terraform Action') {
      steps {
        script {
          def tfCommand = ""

          if (params.ACTION == "plan") {
            tfCommand = "terraform plan -var-file=terraform.tfvars"
          } else if (params.ACTION == "apply") {
            input message: "Are you sure you want to APPLY to ${params.ENV}?"
            tfCommand = "terraform apply -var-file=terraform.tfvars -auto-approve"
          } else if (params.ACTION == "destroy") {
            input message: "Are you sure you want to DESTROY resources in ${params.ENV}?"
            tfCommand = "terraform destroy -var-file=terraform.tfvars -auto-approve"
          }

          dir("envs/${params.ENV}") {
            sh tfCommand
          }
        }
      }
    }
  }
}

